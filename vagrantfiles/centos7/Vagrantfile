# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_NO_PARALLEL'] = 'yes'

Vagrant.configure(2) do |config|

  ##### configuration parameters #####
  #HOST_PORT = "2222" #which host-port forward to guest-port
  #GUEST_PORT = "22" #which guest-port will be forward from host-port
  HOST_NAME = "centos"
  BOX_BASE = "centos/7" #Vagrant base box to use
  BOX_NAME = "centos" #name of box
  BOX_RAM_MB = "1024" #amount of RAM
  BOX_CPU_CORE = "1" #number of CPUs
  ##### end configuration parameters #####
  
  NodeCount = 1 #number of node(s) to deploy

  	##which host-port forward to box-port
	#config.vm.network "forwarded_port", guest: "#{GUEST_PORT}", host: "#{HOST_PORT}"

    ##disable default /vagrant share
	config.vm.synced_folder ".", "/vagrant", disabled: true

	##ssh key-based authentication
	config.ssh.insert_key = false
    config.ssh.private_key_path = ['~/.vagrant.d/insecure_private_key', '~/.ssh/id_rsa']
    config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"

	##If install VirtualBox Guest Additions set auto_update to "TRUE" or running command "vagrant vbguest --do install"
	##must install ==> vagrant plugin install vagrant-vbguest
    if Vagrant.has_plugin?("vagrant-vbguest") then
      config.vbguest.auto_update = false
      config.vbguest.no_remote = true
    end

	##run bootstrap script
	#config.vm.provision "shell", path: "bootstrap.sh"

    ##resize hard disk of Vagrant box # must install 'vagrant plugin install vagrant-disksize'
    #config.disksize.size = '20GB' 
	(1..NodeCount).each do |i|
	config.vm.define "#{BOX_NAME}#{i}" do |node|
      node.vm.box = BOX_BASE
      node.vm.hostname = "#{HOST_NAME}#{i}.testlab.local"
      node.vm.network "public_network", ip: "192.168.16.10#{i}"
	  ##node.vm.network "private_network", ip: "10.10.10.10#{i}"

	  ##provision resources to vm
	  node.vm.provider "virtualbox" do |vb|
        vb.name = "#{BOX_NAME}#{i}"
        vb.memory = BOX_RAM_MB
        vb.cpus = BOX_CPU_CORE
		# Prevent VirtualBox from interfering with host audio stack
        vb.customize ["modifyvm", :id, "--audio", "none"]
      end
	  ##run bootstrap script
	  node.vm.provision "shell", path: "bootstrap.sh"
	end
  end
end